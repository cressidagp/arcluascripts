--[[
	ArcLuaScripts for ArcEmu
	www.ArcEmu.org
	Engine: A.L.E
	
	Instance: The Ruby Sanctum
	Boss: Halion the Destroyer

	Credits:

	*) TrinityCore for texts, sound ids, timers, spell ids and some Inspiration.
	*) Hypersniper for his lua guides and some job in the lua engine.
	*) Paroxysm for his Modular Way of scripting, LCF and Lua Scripting Expected Standards.
	*) ArcEmu developers for ArcEmu and his A.L.E, specially to dfighter1985.
	
	https://www.youtube.com/watch?v=4TwEUrlRLeg
	
	ToDo:

	*) Twilight Precision: so far, all my attems to fix aura display using SetDBCSpellVar had failed.
	*) get correct scale for exit portals.
	*) 76006: has a dummy effect (1) but no handler for it.
	*) 76006: has an apply dummy aura effect but no handler for it.
	*) 76010: has a dummy effect (0) but no handler for it.
	*) 74637: has a dummy effect (0) but no handler for it.
	*) 75396: has a scripted effect (0) but no handler for it.
	*) 74641: has an apply dummy aura effect but no handler for it.
	*) 74812: has an aplly dummy aura effect but no handler for it.
	*) add localization.
	*) implement better test/debug commands.
	*) improve tail lash.
	*) npc combustion and consumption.
	*) npc living inferno.
	*) npc living embers.
	*) The End: get rid of yell = {} and text = {} to save some KB.
	
	enUS locale:
	
	esMX locale:
	
--]]

--print( "Lua memory before Halion: "..gcinfo().." Kb." );

local mod = getfenv( 1 );
assert( mod );
module( mod._NAME..".HALION_THE_DESTROYER", package.seeall );
local self = getfenv( 1 );

--[[ Constants:
local MAP_RUBY_SANCTUM	= 724;

local NPC_HALION	= 39863;
local NPC_25M_HALION	= 39864;
local H_NPC_HALION	= 39944;
local H_NPC_25M_HALION	= 39945;

local NPC_TWILIGHT_HALION	= 40142;
local NPC_25M_TWILIGHT_HALION	= 40143;
local H_NPC_TWILIGHT_HALION = 40144;
local H_NPC_25M_TWILIGHT_HALION	= 40145;

local NPC_CONTROLLER = 40146;
local NPC_CONTROLLER_ID = 200631;

local NPC_ORB_CARRIER = 40081;
local NPC_25M_ORB_CARRIER = 40470;
local H_ORB_CARRIER = 40471;
local H_NPC_25M_ORB_CARRIER = 40472;

local NPC_ORB_1 = 40083;
local NPC_ORB_2 = 40100;
local NPC_ORB_3 = ?
local NPC_ORB_4 = ?

local NPC_METEOR_STRIKE_MARK = 40029;
local NPC_METEOR_STRIKE_CRAP = { 40041, 40042, 40043, 40041 };
local NPC_METEOR_STRIKE_FLAME = 40055;

local NPC_COMBUSTION = 40001;
local NPC_CONSUMPTION = 40135;

local NPC_LIVING_INFERNO = 40681;
local NPC_LIVING_EMBER = 40683;

local GO_TREES = { 203034, 203035, 203036, 203037 };
]]

--[[ For 3.3.5a
local GAMEOBJECT_BYTES_1		= 0x0006 + 0x000B;
local UNIT_FIELD_SUMMONEDBY		= 0x0006 + 0x0008;
local UNIT_FIELD_FLAGS			= 0x0006 + 0x0035;
local UNIT_FLAG_COMBAT			= 0x00080000;
local UNIT_FLAG_NOT_SELECTABLE	= 0x02000000;
local UNIT_FIELD_FLAGS_2		= 0x0006 + 0x0036;
local UNIT_FLAG2_ENABLE_POWER_REGEN	= 0x0000800;
]]

--[[ not more needed so lets save some bytes
local sound = {
-- Halion:
[ 1 ] = 17499,  -- Intro
[ 2 ] = 17500,  -- OnCombat
[ 3 ] = 17505,  -- OnMeteorStrike
[ 4 ] = 17507,  -- OnPhaseTwo
[ 5 ] = 17503,  -- OnDeath
[ 6 ] = 17501,  -- OnTargetDied1
[ 7 ] = 17502,	-- OnTargetDied2
[ 8 ] = 17504,  -- OnBerserk
-- Twilight:
[ 9 ] = 17506,	-- SpherePulse
[ 10 ] = 17508	-- OnPhaseThree
};
]]

local yell = {
"Meddlesome insects! You are too late. The Ruby Sanctum is lost!",	-- Halion: Intro
"The heavens burn!", -- OnMeterStrike
"You will find only suffering within the realm of twilight! Enter if you dare!",	-- OnPhaseTwo
"Another \"hero\" falls.",	-- OnTargetDied
"Not good enough....",	-- OnBerserk
"Beware the shadow!", -- Twilight
"I am the light and the darkness! Cower, mortals, before the herald of Deathwing!"
};

local text = {
"Without pressure in both realms, %s begins to regenerate.",  -- Shared (type 41)
"Your efforts force %s further out of the physical realm!", -- (type 41)
"Your companions' efforts force %s further into the physical realm!", -- (type 41)
-- Shadow Orb
"The orbiting spheres pulse with dark energy!" -- (type 41)
};

--[[ Spells (Halion):
local SPELL_FLAME_BREATH	= 74525;
local SPELL_METEOR_STRIKE	= 74637; -- aoe?
local SPELL_FIERY_COMBUSTION	= 74562;

-- Spells (Twilight Halion):
local SPELL_DARK_BREATH	= 74806;
local SPELL_SOUL_CONSUMPTION	= 74792;

-- Spells (shared):
local SPELL_CLEAVE	= 74524;
local SPELL_TAIL_LASH	= 74531;
local SPELL_TWILIGHT_PRECISION 	= 78243; -- not aura displayed

-- Spells (Halion Controller):
local SPELL_COSMETIC_FIRE_PILLAR	= 76006;
local SPELL_FIERY_EXPLOSION = 76010;
local SPELL_CLEAR_DEBUFFS	= 75396;

-- Handled by Controller:
local SPELL_TWILIGHT_MENDING = 75509;
local SPELL_BERSERK = 26662;

-- Spells (Misc):
local SPELL_TWILIGHT_PHASING	= 74808; -- phase spell from phase 1 to phase 2
local SPELL_TWILIGHT_DIVISION	= 75063; -- phase spell from phase 2 to phase 3
local SPELL_DUSK_SHROUD	= 75476;
local SPELL_COPY_DAMAGE	= 74810;
local SPELL_SUMMON_TWILIGHT_PORTAL	= 74809; -- summons go 202794
local SPELL_LEAVE_TWILIGHT_REALM	= 74812;

local SPELL_SUMMON_EXIT_PORTALS	= 74805; -- this spell dont exist, server side?

-- Spells (Orb Carrier):
local SPELL_TRACK_ROTATION	= 74758;
local SPELL_TWILIGHT_CUTTER = 74768; -- unknown dummy effect
local SPELL_TWILIGHT_CUTTER_TRIGGERED	= 74769;
local SPELL_TWILIGHT_PULSE_PERIODIC	= 78861;

-- Spells (Meteor Strike):
local SPELL_METEOR_STRIKE_COUNTDOWN	= 74641;
local SPELL_METEOR_STRIKE_AOE_DAMAGE	= 74648;
local SPELL_METEOR_STRIKE_FIRE_AURA_1	= 74713;
local SPELL_METEOR_STRIKE_FIRE_AURA_2	= 74718;
local SPELL_BIRTH_NO_VISUAL	= 40031;
]]

-- twilight, material
local spell_corporeality = {
{ 74836, 74831 },
{ 74835, 74830 },
{ 74834, 74829 },
{ 74833, 74828 },
{ 74832, 74827 },
{ 74826, 74826 },
{ 74827, 74832 },
{ 74828, 74833 },
{ 74829, 74834 },
{ 74830, 74835 },
{ 74831, 74836 }
};

-- set twilight realm as a negative buff
SetDBCSpellVar( 74807, "c_is_flags", 0x01000 );

--[[ WorldStates:
local WORLDSTATE_CORPOREALITY_MATERIAL = 5049;
local WORLDSTATE_CORPOREALITY_TWILIGHT = 5050;
local WORLDSTATE_CORPOREALITY_TOGGLE   = 5051;
]]

-- Phases:
local PHASE_INTRO	= 1;
local PHASE_ONE		= 2; -- combat in Physical realm
local PHASE_TWO		= 3; -- combat in Twilight realm
local PHASE_THREE	= 4; -- combat in both realms

--[[

		Halion AI ( 39863 )
		
--]]

function OnSpawn( unit )

	local BOSS_HP = { 11156000, 40440500, 15339500, 58569000 };
	
    local diff = unit:GetDungeonDifficulty();
	
	-- set health acording to difficulty
	if( diff >= 1 )
	then
		unit:SetMaxHealth( BOSS_HP[ diff + 1 ] );
		unit:SetHealth( BOSS_HP[ diff + 1 ] );
	end
end

function OnCombat( unit )

	-- create protected variables
	self[ tostring( unit )] = {
	
	-- set combat in Physical realm
	phase = PHASE_ONE,
	
	cleave = math.random( 6, 10 ),
	tailLash = math.random( 7, 12 ),
	flameBreath = math.random( 5, 15 ),
	flameRingTime = 5,
	meteorStrike = 18,
	fieryCombustion = math.random( 15, 18 )
	
	};

	-- Developer notes: we dont need to send the chat here since
    -- our monstersay table will do the job, instance collision checked.

    unit:PlaySoundToSet( 17500 );

	-- spell twilight precision
	unit:AddAura( 78243, 0 );
	
	-- get controller using spawnid 
	local controller = GetInstanceCreature( 724, unit:GetInstanceID(), 200631 );
	if( controller )
	then
		local vars = self[ tostring( controller ) ];
		
		-- set combat in Physical realm
		vars.phase = PHASE_ONE;
	end
	
	unit:RegisterAIUpdateEvent( 1000 );
	
end

function OnDeath( unit )

	-- destroy table with variables to recycle resources

	self[ tostring( unit ) ] = nil;

	-- Developer notes: we dont need to send the chat here since our
	-- monstersay table will do the job, instance collision checked. ]]

    unit:PlaySoundToSet( 17503 );
	
	local iid = unit:GetInstanceID();

	-- get twilight halion using guid
	local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
	if( twilightHalion )
	then
		if( twilightHalion:IsAlive() == true )
		then
			twilightHalion:Kill();
			HSHARED[ iid ].dataTwilight = nil;
		end
	end

	-- get controller using spawnid
	local controller = GetInstanceCreature( 724, iid, 200631 );
	if( controller )
	then
		if( controller:IsAlive() == true )
		then
			controller:Kill();
		end
	end
end

function OnDamageTaken( unit, _, attacker, damage )

	local vars = self[ tostring( unit ) ];

	local hp = unit:GetHealth();
	
    if( damage >= hp and vars.phase ~= PHASE_THREE )
	then
        damage = hp - 1;
	end
	
	-- from phase combat in physical world set to...
	if( unit:GetHealthPct() < 75 and vars.phase == PHASE_ONE )
	then
		-- set combat in twilight realm
		vars.phase = PHASE_TWO;
		
		unit:PlaySoundToSet( 17507 );
		unit:SendChatMessage( 14, 0, yell[ 3 ] );
		unit:CancelSpell();
		
		-- set not attacable
		unit:SetFlag( 0x0006 + 0x0035, 0x02000000 );
		
		-- phase spell from phase 1 to phase 2 (spell twilight phasing)
		unit:CastSpell( 74808 );
		
		-- spell summon twilight portal
		unit:CastSpell( 74809 );
		
		--[[ send all players to twilight realm
		local tbl = unit:GetInRangePlayers();
		
		for _, v in ipairs( tbl ) 
		do
			plrs:CastSpell( 74807 );
		end]]
		
		-- hacky: summon twilight halion
		local twilightHalion = unit:SpawnCreature( 40142, 3156.67, 533.8108, 72.98822, 3.159046, 14, 0, 1, 1, 1, 1, 0 );
		
		local iid = unit:GetInstanceID();
		
		-- try to get and store twilight halion guid to use it later
		HSHARED[ iid ].dataTwilight = twilightHalion:GetGUID();
		
		-- get controller using spawnid 
		local controller = GetInstanceCreature( 724, iid, 200631 );
		if( controller )
		then
			local varsbis = self[ tostring( controller ) ];
			
			-- set combat in twilight realm
			varsbis.phase = PHASE_TWO;
		end	
	end

	if( vars.phase == PHASE_THREE )
	then
		if( unit:GetPhase() ~= attacker:GetPhase() ) then return; end

		-- get controller using spawnid 
		local controller = GetInstanceCreature( 724, unit:GetInstanceID(), 200631 );
		if( controller )
		then
			local varsbis = self[ tostring( controller ) ];
			varsbis.materialDamageTaken = varsbis.materialDamageTaken + damage;
		end
	end
end

function OnCastSpell( unit, event, spell_id )
	
	-- spell twilight mending
	if( spell_id == 75509 )
	then
		unit:SendChatMessage( 41, 0, text[ 1 ] );
	end
end

function OnAIUpdate( unit )

	local vars = self[ tostring( unit ) ];
	
	-- dont bother with this func when combat in Twilight realm
	if( vars.phase == PHASE_TWO ) then return; end

	if( unit:GetNextTarget() == nil ) then
		unit:WipeThreatList();
		return;
	end

	if( unit:GetCurrentSpell() ~= nil ) then return; end

	vars.cleave = vars.cleave - 1;
	vars.tailLash = vars.tailLash - 1;
	vars.flameBreath = vars.flameBreath - 1;
	if( flameRingTime ~= nil ) then flameRingTime = flameRingTime - 1; end
	vars.meteorStrike = vars.meteorStrike - 1;
	vars.fieryCombustion = vars.fieryCombustion - 1;

	if( vars.cleave <= 0 )
	then
		unit:CastSpell( 74524 );
		vars.cleave = math.random( 6, 10 );

	elseif( vars.tailLash <= 0 )
	then
		unit:CastSpell( 74531 );
		vars.tailLash = math.random( 7, 12 )

	elseif( vars.flameBreath <= 0 )
    then
		unit:FullCastSpell( 74525 );
		vars.flameBreath = math.random( 5, 15 );

	elseif( vars.flameRingTime and vars.flameRingTime <= 0 )
	then
		local flameRing = unit:GetGameObjectNearestCoords( 3154.99, 535.64, 72.89, 203007 );
		if( flameRing )
		then
			-- enable fire ring
			flameRing:SetByte( 0x0006 + 0x000B, 0, 1 );
			vars.flameRingTime = nil;
		end
		
	elseif( vars.meteorStrike <= 0 )
	then
		local target = unit:GetRandomPlayer( 0 );
		if( target )
		then
			local meteorStrikePos = { target:GetLocation() };
			unit:FullCastSpellAoE( meteorStrikePos[ 1 ], meteorStrikePos[ 2 ], meteorStrikePos[ 3 ], 74637 );
			unit:PlaySoundToSet( 17505 );
			unit:SendChatMessage( 14, 0, yell[ 2 ] );
		end
		vars.meteorStrike = 38;
	
	elseif( vars.fieryCombustion <= 0 )
	then
		local target = unit:GetRandomPlayer( 0 );
		if( target )
		then
			unit:CastSpellOnTarget( 74562, target );
		end
		vars.fieryCombustion = 25;
	end
end

RegisterUnitEvent( 39863, 18, OnSpawn );
RegisterUnitEvent( 39863, 1, OnCombat );
RegisterUnitEvent( 39863, 4, OnDeath );
RegisterUnitEvent( 39863, 23, OnDamageTaken );
RegisterUnitEvent( 39863, 29, OnCastSpell );
RegisterUnitEvent( 39863, 21, OnAIUpdate );

--[[

		Twilight Halion AI ( 40142 )
		
--]]

function TwilightHalionOnSpawn( unit )

	local iid = unit:GetInstanceID();

	-- get halion using guid
	local halion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataHalion );
	if not( halion ) then return; end
	
	-- spell copy damage
	halion:AddAura( 74810, 0 );
	unit:AddAura( 74810, 0 );
	
	-- spell dusk shroud
	unit:CastSpell( 75476 );
	
	unit:SetHealth( halion:GetHealth() );
	
	-- set phase mask: 0x00000020 // 6 -- 32
	unit:SetPhase( 32 );
	
	-- react defensive
	unit:DisableCombat( 1 );
	
	-- set unit field flag in combat
	unit:SetFlag( 0x0006 + 0x0035, 0x00080000 );
	
end

function TwilightHalionOnCombat( unit )

	-- create protected variables
	self[ tostring( unit ) ] = {
	
	-- set combat in twilight realm
	phase = PHASE_TWO;
	
	tailLash = 12;
	soulConsumption = 15;
	cleave = 3;
	darkBreath = 12;
	
	};
	
	-- spell twilight precision
	unit:AddAura( 78243, 0 );
	
	unit:RegisterAIUpdateEvent( 1000 );
	
end

function TwilightHalionOnTargetDied( unit, _, victim )

	if( victim:IsPlayer() == true )
	then
		if( math.random( 1, 2 ) == 1 )
		then
			unit:PlaySoundToSet( 17501 );
			unit:SendChatMessage( 14, 0, yell[ 4 ] );
		else
			unit:PlaySoundToSet ( 17502 );
		end
	end
	
	-- send dead player out of twilight realm (spell leave twilight realm)
	--unit:CastSpellOnTarget( 74812, victim );
	victim:RemoveAura( 74807 );
	
end

function TwilightHalionOnDeath( unit )

	-- destroy table with variables to recycle resources

	self[ tostring( unit ) ] = nil;
	
	local iid = unit:GetInstanceID();

	-- get halion using guid
	local halion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataHalion );
	if( halion )
	then
		if( halion:IsAlive() == true )
		then
			halion:Kill();
			HSHARED[ iid ].dataHalion = nil;
		end
	end
	
	-- get controller using spawnid 
	local controller = GetInstanceCreature( 724, iid, 200631 );
	if( controller )
	then
		if( controller:IsAlive() == true )
		then
			controller:Kill();
		end
	end
end

function TwilightHalionOnDamageTaken( unit, _, attacker, damage )

	local vars = self[ tostring( unit ) ];

	local hp = unit:GetHealth();
	
    if( damage >= hp and vars.phase ~= PHASE_THREE )
	then
        damage = hp - 1;
	end
	
	-- call on combat here? will work?
	--[[if( vars.phase ~= PHASE_TWO and vars.phase ~= PHASE_THREE )
	then
		unit:TwilightHalionOnCombat( attacker );
	end]]
	
	if( unit:GetHealthPct() < 50 and vars.phase == PHASE_TWO )
	then
		-- set combat in both realms
		vars.phase = PHASE_THREE;
		
		unit:CancelSpell();
		
		-- phase spell from phase 2 to phase 3 (spell twilight division)
		unit:CastSpell( 75063 );

		unit:PlaySoundToSet( 17508 );
		unit:SendChatMessage( 14, 0, yell[ 7 ] );
	end

	if( vars.phase == PHASE_THREE )
	then
		if( unit:GetPhase() ~= attacker:GetPhase() ) then return; end
		
		-- get controller using spawnid
		local controller = GetInstanceCreature( 724, unit:GetInstanceID(), 200631 );
		if( controller )
		then
			controller:SetHealth( controller:GetHealth() - damage );
			local varsbis = self[ tostring( controller ) ];
			varsbis.twilightDamageTaken = varsbis.twilightDamageTaken + damage;
		end
	end
end

function TwilightHalionOnCastSpell( unit, event, spell_id )
	
	-- spell twilight division
	if( spell_id == 75063 )
	then
		local controller = GetInstanceCreature( 724, unit:GetInstanceID(), 200631 );
		if( controller )
		then
			controller:RegisterLuaEvent( ControllerDoAction, 1000, 1, 3 );
		end
	end
	
	-- spell twilight mending
	if( spell_id == 75509 )
	then
		unit:SendChatMessage( 41, 0, text[ 1 ] );
	end
end

function TwilightHalionOnAIUpdate( unit )

	if( unit:GetCurrentSpell() ~= nil ) then return; end

	if( unit:GetNextTarget() == nil ) then
		unit:WipeThreatList();
		return;
	end
	
	local vars = self[ tostring( unit ) ];

	vars.tailLash = vars.tailLash - 1;
	vars.soulConsumption = vars.soulConsumption - 1;
	vars.cleave = vars.cleave - 1;
	vars.darkBreath = vars.darkBreath - 1;
	
	if( vars.cleave <= 0 )
	then
		unit:CastSpell( 74524 );
		vars.cleave = math.random( 7, 10 );

	elseif( vars.tailLash <= 0 )
	then
		unit:FullCastSpellOnTarget( 74531, unit:GetRandomPlayer( 0 ) );
		vars.tailLash = math.random( 12, 16 );
	
	elseif( vars.darkBreath <= 0 )
	then
		unit:FullCastSpell( 74806 );
		vars.darkBreath = math.random( 10, 14 );
		
	elseif( vars.soulConsumption <= 0 )
	then
		local target = unit:GetRandomPlayer( 0 );
		if( target )
		then
			unit:CastSpellOnTarget( 74792, target );
		end
		vars.soulConsumption = 20;	
	end
end

RegisterUnitEvent( 40142, 18, TwilightHalionOnSpawn );
RegisterUnitEvent( 40142, 1, TwilightHalionOnCombat );
RegisterUnitEvent( 40142, 3, TwilightHalionOnTargetDied );
RegisterUnitEvent( 40142, 4, TwilightHalionOnDeath );
RegisterUnitEvent( 40142, 23, TwilightHalionOnDamageTaken );
RegisterUnitEvent( 40142, 29, TwilightHalionOnCastSpell );
RegisterUnitEvent( 40142, 21, TwilightHalionOnAIUpdate );

--[[

		Halion Controller AI ( 40146 )
		
--]]

local HSHARED = {}

-- def unit flags 256 + 33554432 (256 for development :P)
function ControllerOnSpawn( unit )

	-- created protected variables
	self[ tostring( unit )] = {

	materialCorporealityValue = 5,
	eventStartIntro = 7

	};
	
	-- created shared variables
	HSHARED = {}
	HSHARED[ unit:GetInstanceID() ] = {
	
	halionIsDone = false

	};

end

function ControllerOnCombat( unit )

	-- add more protected variables
	local vars = self[ tostring( unit ) ];
	
	vars.twilightDamageTaken = 0;
	vars.materialDamageTaken = 0;
	vars.triggerBerserk = 1000 * 30 * 60;
	
end

function ControllerOnLeaveCombat( unit )

	local iid = unit:GetInstanceID();

	if( HSHARED[ iid ].halionIsDone == true )
	then return; end
	
	-- get twilight halion using guid
	local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
	if( twilightHalion )
	then
		twilightHalion:Despawn( 1000, 0 );
	end	

	-- get halion using guid
	local halion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataHalion );
	if( halion )
	then
		halion:Despawn( 1000, 0 );
	end
end

function ControllerOnDeath( unit )
	
	-- spell clear debuffs
	unit:CastSpell( 75396 );
	
	-- open fire ring
	local flameRing = unit:GetGameObjectNearestCoords( 3154.99, 535.64, 72.89, 203007 );
	flameRing:SetByte( 0x0006 + 0x000B, 0, 0 );
	
end

function ControllerDoAction( unit, action )

	local vars = self[ tostring( unit ) ];
	
	-- intro halion
	if( action == 1 )
	then
		vars.eventStartIntro = 2;
		vars.phase = PHASE_INTRO;
		
	-- intro halion 2
	elseif( action == 2 )
	then
		local TREES = { 203034, 203035, 203036, 203037 };
	
	-- monitor corporeality
	elseif( action == 3 )
	then
		local iid = unit:GetInstanceID();
		
		-- try to get halion using guid
		local halion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataHalion );
		if not( halion )
		then
			local vars = self[ tostring( halion ) ];
			
			-- set combat in both realms
			vars.phase = PHASE_TREE;
			
			-- try to get twilight halion using guid
			local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
			if not( twilightHalion )
			then
				-- twlight phasing
				halion:RemoveAura( 74808 );
			
				-- unit field flag not selectable
				halion:RemoveFlag( 0x0006 + 0x0035, 0x02000000 );
			end
		end
		
		-- summon twilight exit portals at phase 32
		-- ToDo: use GetLocation() here
		-- witch scale?
		unit:SpawnGameObject( 202796, unit:GetX(), unit:GetY(), unit:GetZ(), unit:GetO(), 0, 1, 32 );
		
		-- display worldstates
		unit:SetWorldStateForZone( 5051, 1 );
		unit:SetWorldStateForZone( 5049, 50 );
		unit:SetWorldStateForZone( 5050, 50 );
		
		vars.checkCorporeality = 7;
	
	-- activate embers
	elseif( action == 4 )
	then
		vars.activateEmbers = 6;
	end
end

-- Developer notes: we have a problem here, since arcemu didnt implemented extra_flags why miss
-- CREATURE_FLAG_EXTRA_TRIGGER (creature is trigger-NPC (invisible to players only)). We can
-- manually make the trigger invisible but invisible creatures cast invisible spells.

function ControllerOnAIUpdate( unit )

	--if( unit:GetNextTarget() == nil ) then
	--	unit:WipeThreatList();
	--	return;
	--end
	
	local vars = self[ tostring( unit ) ];

	if( vars.eventStartIntro ~= nil ) then vars.eventStartIntro = vars.eventStartIntro - 1; end
	if( vars.eventIntroProgress1 ~= nil ) then vars.eventIntroProgress1 = vars.eventIntroProgress1 - 1; end
	if( vars.eventIntroProgress2 ~= nil ) then vars.eventIntroProgress2 = vars.eventIntroProgress2 - 1; end
	if( vars.eventIntroProgress3 ~= nil ) then vars.eventIntroProgress3 = vars.eventIntroProgress3 - 1; end
	if( vars.twilightMending ~= nil ) then vars.twilightMending = vars.twilightMending - 1; end
	if( vars.triggerBerserk ~= nil ) then vars.triggerBerserk = vars.triggerBerserk - 1; end
	
	if( vars.eventStartIntro and vars.eventStartIntro <= 0 )
	then
		-- spell cosmetic fire pillar
		unit:CastSpell( 76006 );
		
		vars.eventStartIntro = nil;
		vars.eventIntroProgress1 = 4;

	elseif( vars.eventIntroProgress1 and vars.eventIntroProgress1 <= 0 )
	then
		local burningTree3 = unit:GetGameObjectNearestCoords( 3117.12, 589.134, 71.3221, 203036 );
		if( burningTree3 )
		then
			burningTree3:SetByte( 0x0006 + 0x000B, 0, 2 );
		end
		
		local burningTree4 = unit:GetGameObjectNearestCoords( 3108.75, 484.34, 71.6583, 203037 );
		if( burningTree4 )
		then
			burningTree4:SetByte( 0x0006 + 0x000B, 0, 2 );
		end
		
		vars.eventIntroProgress1 = nil
		vars.eventIntroProgress2 = 4;

	elseif( vars.eventIntroProgress2 and vars.eventIntroProgress2 <= 0 )
	then
		local burningTree1 = unit:GetGameObjectNearestCoords( 3187.96, 586.766, 73.563, 203034 );
		if( burningTree1 )
		then
			burningTree1:SetByte( 0x0006 + 0x000B, 0, 2 );
		end
		
		local burningTree2 = unit:GetGameObjectNearestCoords( 3190.34, 486.561, 71.1216, 203035 );
		if( burningTree2 )
		then
			burningTree2:SetByte( 0x0006 + 0x000B, 0, 2 );
		end
		
		vars.eventIntroProgress2 = nil;
		vars.eventIntroProgress3 = 4;
	
	elseif( vars.eventIntroProgress3 and vars.eventIntroProgress3 <= 0 )
	then
		-- spell fiery explosion
		unit:CastSpell( 76010 );
		
		-- spawn halion
		local halion = unit:SpawnCreature( 39863, 3156.67, 533.8108, 72.98822, 3.159046, 14, 0, 1, 1, 1, 1, 0 );
		
		-- try to get and store halion guid to use it later
		HSHARED[ unit:GetInstanceID() ].dataHalion = halion:GetGUID();

		unit:PlaySoundToSet( 17499 );
    	unit:SendChatMessage( 14, 0, yell[ 1 ] );
		
		vars.eventIntroProgress3 = nil;
		
	elseif( vars.twilightMending and vars.twilightMending <= 0 )
	then
		local iid = unit:GetInstanceID();
		
		-- get twilight halion using guid
		local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
		if( twilightHalion )
		then
			twilightHalion:CastSpell( 75509 );
		end
	
	elseif( vars.triggerBerserk and vars.triggerBerserk <= 0 )
	then
		local iid = unit:GetInstanceID();
		
		-- get halion using guid
		local halion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataHalion );
		if( halion )
		then
			halion:CastSpell( 26662 );
		end
		
		-- get twilight halion using guid
		local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
		if( twilightHalion )
		then
			twilightHalion:CastSpell( 26662 );
		end
		
		vars.isEnraged = true;
		
	elseif( vars.shadowPulsars and vars.shadowPulsars <= 0 )
	then
		-- get orb carrier using spawn id
		local orbCarrier = GetInstanceCreature( 724, iid, 711234 );
		if( orbCarrier )
		then
			-- action send warning shoot
			orbCarrier:RegisterLuaEvent( OrbCarrierDoAction, 1000, 1, 2 );
		end
		vars.shadowPulsars = 30;
	
	elseif( vars.checkCorporeality and vars.checkCorporeality <= 0 )
	then
		UpdateCorporeality( unit );
		vars.checkCorporeality = 5;
	
	elseif( vars.activateEmbers and vars.activateEmbers <= 0 )
	then
		-- ToDo
	end
end

function UpdateCorporeality( unit )
	
	local vars = self[ tostring( unit ) ];
	
	local oldValue = vars.materialCorporealityValue;
	
	if( vars.twilightDamageTaken == 0 or vars.materialDamageTaken == 0 )
	then
		vars.twilightMending = 0.1;
		return;	end

	local damageRatio = vars.materialDamageTaken / vars.twilightDamageTaken;
	
	-- corporeality none
	local action = 0;
	
	if( damageRatio <= 0.98 )
	then
		-- corporeality decrease
		action = 3 ;
		
	elseif( 0.99 < damageRatio and damageRatio < 1.01 )
	then
		-- corporeality twilight mending
		action = 1;
	
	elseif( 1.02 < damageRatio )
	then
		-- corporeality increase
		action = 2;
	end
	
	-- corporeality none
	if( action == 0 )
	then
		vars.materialDamageTaken = 0;
		vars.twilightDamageTaken = 0;
		return;
	
	-- corporeality increase
	elseif( action == 2 )
	then
		if( vars.materialCorporealityValue >= 11 - 1 ) then	return; end
		
		vars.materialCorporealityValue = vars.materialCorporealityValue + 1;
	
	-- corporeality decrease
	elseif( action == 3 )
	then
		if( vars.materialCorporealityValue <= 0 ) then return; end
		
		vars.materialCorporealityValue = vars.materialCorporealityValue - 1;
	
	-- corporeality twilight mending
	elseif( action == 1 )
	then
		vars.twilightMending = 0.1;
		vars.materialDamageTaken = 0;
		vars.twilightDamageTaken = 0;
		return; 
	end
	
	vars.materialDamageTaken = 0;
    vars.twilightDamageTaken = 0;
	
	unit:SetWorldStateForZone( 5049, vars.materialCorporealityValue * 10 );
	unit:SetWorldStateForZone( 5050, 100 - vars.materialCorporealityValue * 10 );
	
	local iid = unit:GetInstanceID();
		
	-- get halion using guid
	local halion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataHalion );
	if( halion )
	then
		halion:CastSpell( spell_corporeality[ vars.materialCorporealityValue ][ 2 ] );
	end
	
	-- get twilight halion using guid
	local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
	if( twilightHalion )
	then
		twilightHalion:CastSpell( spell_corporeality[ vars.materialCorporealityValue ][ 1 ] );		
	end
end

RegisterUnitEvent( 40146, 18, ControllerOnSpawn );
RegisterUnitEvent( 40146, 1, ControllerOnCombat );
RegisterUnitEvent( 40146, 2, ControllerOnLeaveCombat );
RegisterUnitEvent( 40146, 4, ControllerOnDeath );
RegisterUnitEvent( 40146, 21, ControllerOnAIUpdate );

--[[

		Orb Carrier AI ( 40081 )
		
--]]

function OrbCarrierOnAIUpdate( unit, event )

	-- on aiupdate
    if( event == 21 )
    then
		if( unit:IsCasting() == true ) then return; end
		
		-- spell track rotation
		unit:FullCastSpell( 74758 );

	-- on spawn
	else
        --unit:RegisterAIUpdateEvent( 1000 );
		
		-- lets get orbs guid after 3 secs
		unit:RegisterLuaEvent( OrbCarrierDoAction, 3000, 1, 1 );
		
		--for debug
		--unit:RegisterLuaEvent( OrbCarrierDoAction, 5000, 1, 2 );
		unit:RegisterLuaEvent( OrbCarrierDoAction, 5000, 1, 3 );
    end	
end

function OrbCarrierDoAction( unit, action )

	local iid = unit:GetInstanceID();
	
	-- store orbs guid for later use
	if( action == 1 )
	then
		
		local orb1 = unit:GetCreatureNearestCoords( 3153.75, 533.19, 72.97, 40083 );
		if( orb1 )
		then
			HSHARED[ iid ].dataOrb1 = orb1:GetGUID();
			
			-- set unit field flag not selectable
			orb1:SetFlag( 0x0006 + 0x0035, 0x02000000 );
		end
		
		local orb2 = unit:GetCreatureNearestCoords( 3153.75, 533.19, 72.97, 40100 );
		if( orb2 )
		then
			HSHARED[ iid ].dataOrb2 = orb2:GetGUID();
			
			-- set unit field flag not selectable
			orb2:SetFlag( 0x0006 + 0x0035, 0x02000000 );
		end
		
	-- action warning shot
	elseif( action == 2 )
	then
		
		local orb1 = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataOrb1 );
		if( orb1 )
		then
			orb1:SendChatMessage( 41, 0, text[ 4 ] );
		end
	
		unit:RegisterLuaEvent( OrbCarrierDoAction, 5000, 1, 3 );
			
	-- action shoot
	elseif( action == 3 )
	then
		local orb1 = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataOrb1 );
		local orb2 = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataOrb2 );
		if( orb1 and orb2 )
		then
			-- orbs can be killed?
			orb1:SetInvincible();
			orb2:SetInvincible();
			
			-- spell twilight pulse periodic
			orb1:CastSpell( 78861 );
			orb2:CastSpell( 78861 );
			
			-- spell twilight cutter
			orb1:ChannelSpell( 74768, orb2 );
		end
		
		local twilightHalion = GetInstanceCreature( 724, iid, HSHARED[ iid ].dataTwilight );
		if( twilightHalion )
		then
			twilightHalion:PlaySoundToSet( 17506 );
			twilightHalion:SendChatMessage( 14, 0, yell[ 6 ] );
		end
	end
end

RegisterUnitEvent( 40081, 18, OrbCarrierOnAIUpdate );
RegisterUnitEvent( 40081, 21, OrbCarrierOnAIUpdate );

--[[

		Meteor Strike Mark AI ( 40029 )
		
--]]

function MeteorStrikeMark( unit )

	--print("meteor strike mark")
		
	-- spell meteor strike countdown
	unit:CastSpell( 74641 );
		
	-- spell birth no visual
	unit:CastSpell( 40031 );
		
	local randomAdjust = math.random( math.pi / 5, math.pi / 2 );
		
	local position = { unit:GetLocation() };

	local angles = { 0, 0, 0, 0 };
		
	angles[ 1 ] = position[ 4 ];
	angles[ 2 ] = position[ 4 ] + randomAdjust;
	angles[ 3 ] = position[ 4 ] + math.pi;
	angles[ 4 ] = angles[ 3 ] + randomAdjust;
		
	local meteorStrikeCrap = { 40041, 40042, 40043, 40044 };
	for i = 1, #meteorStrikeCrap
	do
		-- GetNearPosition( dist, angle )
		local newx = position[ 1 ] + 10 * math.cos( angles[ i ] );
		local newy = position[ 2 ] + 10 * math.sin( angles[ i ] );
		local newz = unit:GetLandHeight( newx, newy );
		unit:SpawnCreature( meteorStrikeCrap[ i ], newx, newy, newz, 1.5, 14, 30000, 1, 1, 1, 1, 0 );
	end
end

function MeteorStrikeDoAction( unit, action )
	
	-- mark: meteor strike aoe
	if( action == 1 )
	then
		-- spell meteor strike aoe damage
		unit:CastSpell( 74648 );
		
		-- spell meteor strike fire aura 1
        unit:CastSpell( 74713 );
	
	-- crap: meteor strike burn
	elseif( action == 2 )
	then
		-- spell meteor strike fire aura 2
		unit:CastSpell( 74718 );
		
		unit:RegisterEvent( SpawnMeteorFlame, 500, 1 );
	end
end

RegisterUnitEvent( 40029, 18, MeteorStrikeMark );

--[[

		Meteor Strike Crap AI ( 40041, 42, 43, 44 )
		
--]]

function MeteorStrikeCrap( unit )

	--print("meteor strike crap on spawn: "..unit:GetEntry().."")
	
	unit:RegisterLuaEvent( MeteorStrikeDoAction, 100, 1, 2 );
	
end

function SpawnMeteorFlame( unit )

	local position = { unit:GetLocation() };
	
	-- spawn flame just for 25 secs
	unit:SpawnCreature( 40055, position[ 1 ], position[ 2 ], position[ 3 ], 1.5, 14, 25000, 1, 1, 1, 1, 0 );	
end

RegisterUnitEvent( 40041, 18, MeteorStrikeCrap );
RegisterUnitEvent( 40042, 18, MeteorStrikeCrap );
RegisterUnitEvent( 40043, 18, MeteorStrikeCrap );
RegisterUnitEvent( 40044, 18, MeteorStrikeCrap );

--[[

		Meteor Strike Flame AI ( 40055 )
		
--]]

function MeteorStrikeFlame( unit, event )

	-- on aiupdate
	if( event == 21 )
	then
		-- spell meteor strike fire aura 2
		unit:CastSpell( 74718 );
		unit:RemoveAIUpdateEvent();
	
	-- on spawn
	else
		unit:RegisterAIUpdateEvent( 1000 );
		--print( "meteor strike flame spawned" );
	end
end

RegisterUnitEvent( 40055, 18, MeteorStrikeFlame );
RegisterUnitEvent( 40055, 21, MeteorStrikeFlame );

--[[

		Combustion and Consumption AI ( 40001, 40135 )
		
--]]

function CombustionAndConsumption( unit, event )

	print("CombustionAndConsumption")

	unit:Root();
	
	local entry = unit:GetEntry();
	
	if( entry == 40001 )
	then
		--unit:SetPhase( 1 );
	else
		--unit:SetPhase( 32 );
	end
end

RegisterUnitEvent( 40001, 18, CombustionAndConsumption );
RegisterUnitEvent( 40135, 18, CombustionAndConsumption );

--[[

		GameObject: Twilight Portal ( 202794, 202796 )

--]]

function PortalOnActivate( go, event, plr )

	local entry = go:GetEntry();

	if( entry == 202794 )
	then
		-- send player to twilight realm (spell twilight realm)
		plr:CastSpell( 74807 );
	
	elseif( entry == 202796 )
	then
		-- send player out of twilight realm (spell leave twilight realm)
		--plr:CastSpell( 74812 );
		plr:RemoveAura( 74807 )
	end
end

RegisterGameObjectEvent( 202794, 4, PortalOnActivate );
RegisterGameObjectEvent( 202796, 4, PortalOnActivate );

--[[

		Aura: Meteor Strike Mark ( 74641 )

--]]

function OnAuraRemove( _, aura )

	-- Developers note: currently there isnt a RegisterDummyAura method in our lua engine so i need
	-- to be creative. This is the only aura hook i have. If a new one pop up then 
	-- i will move both of them to a separate file to consolidate into one function.

	if( aura:GetSpellId() == 74641 )
	then
		local unit = aura:GetCaster();
		unit:RegisterLuaEvent( MeteorStrikeDoAction, 100, 1, 1 );
		
		-- some attemps that didnt work
		--MeteorStrikeDoAction( unit, action )
		--unit:RegisterEvent( MeteorStrikeDoAction, 1000, 1, 1)
    end
end

RegisterServerHook( 31, OnAuraRemove );

--print( "Lua memory after Halion: "..gcinfo().." Kb." );

--[[
		DEBUG COMMANDS DISABLED BY DEFAULT


local COMMANDS = { "halion", "port", "exit", "open", "close", "hp75", "hp50", "action1", "action2", "action3", "action4", "meteor", "controller" };

function Commands( _, plr, message )

	if( plr:IsGm() == true )
	then
		if( message == "#halion" )
		then
			for i = 1, #COMMANDS
			do
				plr:SendBroadcastMessage( ""..COMMANDS[ i ].."" );
			end

		elseif( message == "#port" )
		then
			plr:Teleport( 724, 3110.10, 534.98, 73.01, 6.19 );
			
		elseif( message == "#exit" )
		then
			plr:Teleport( 571, 3597.61, 200.96, -113.74, 5.30 );
			
		elseif( message == "#open" )
		then
			local flameRing = plr:GetGameObjectNearestCoords( 3154.99, 535.64, 72.89, 203007 );
			flameRing:SetByte( 0x0006 + 0x000B, 0, 0 );
		
		elseif( message == "#close" )
		then
			local flameRing = plr:GetGameObjectNearestCoords( 3154.99, 535.64, 72.89, 203007 );
			flameRing:SetByte( 0x0006 + 0x000B, 0, 1 );
		
		elseif( message == "#hp75" )
		then
			local selection = plr:GetSelection();
			selection:SetHealthPct( 75 );
		
		elseif( message == "#hp50" )
		then
			local selection = plr:GetSelection();
			selection:SetHealthPct( 50 );
					
		elseif( message == "#m" )
		then
			local selection = plr:GetSelection();
			local iid = plr:GetInstanceID();
			local controller = GetInstanceCreature( 724, iid, 200631 );
			local p = self[ tostring( controller ) ].phase
			plr:SendBroadcastMessage( ""..p.."" );
					
		elseif( message == "#action1" )
		then 
			local selection = plr:GetSelection();
			selection:RegisterLuaEvent( ControllerDoAction, 1000, 1, 1 );
				
		elseif( message == "#action2" )
		then 
			local selection = plr:GetSelection();
			selection:RegisterLuaEvent( ControllerDoAction, 1000, 1, 2 );
				
		elseif( message == "#action3" )
		then 
			local selection = plr:GetSelection();
			selection:RegisterLuaEvent( ControllerDoAction, 1000, 1, 3 );

		elseif( message == "#action4" )
		then
			local selection = plr:GetSelection();
			selection:RegisterLuaEvent( ControllerDoAction, 1000, 1, 4 );	
		
		elseif( message == "#mending" )
		then
			local selection = plr:GetSelection();
			local vars = self[ tostring( selection ) ];
			vars.triggerBerserk = 3;
				
		elseif( message == "#meteor" )
		then
			local selection = plr:GetSelection();
			local target = selection:GetRandomPlayer(0);
			local meteorStrikePos = { target:GetLocation() };
			selection:FullCastSpellAoE( meteorStrikePos[ 1 ], meteorStrikePos[ 2 ], meteorStrikePos[ 3 ], 74637 );
			selection:PlaySoundToSet( 17505 );
			selection:SendChatMessage( 14, 0, yell[ 2 ] );
		
		elseif( message == "#combustion" )
		then
			local selection = plr:GetSelection();
			local target = selection:GetRandomPlayer( 0 );
			if( target )
			then
				selection:CastSpellOnTarget( 74562, target );
			end
			
		elseif( message == "#consumption" )
		then
			local selection = plr:GetSelection();
			local target = selection:GetRandomPlayer( 0 );
			if( target )
			then
				selection:CastSpellOnTarget( 74792, target );
			end
		
		elseif( message == "#controller" )
		then
			-- get controller using coords
			local controller = plr:GetCreatureNearestCoords( 3156.04, 533.266, 72.9721, 40146 );
			if( controller )
			then
				controller:RegisterAIUpdateEvent( 1000 );
			end
			
		elseif( message == "#phase1" )
		then
			plr:PhaseSet( 1 );
			
		elseif( message == "#phase32" )
		then
			plr:PhaseSet( 32 );
		
		elseif( message == "#thalion" )
		then
			local controller = plr:GetCreatureNearestCoords( 3156.04, 533.266, 72.9721, 40146 );
			if( controller )
			then
				controller:SpawnCreature( 40142, 3156.67, 533.8108, 72.98822, 3.159046, 14, 0, 1, 1, 1, 32, 0 );
			end
		end
	end
end

RegisterServerHook( 16, Commands );
]]